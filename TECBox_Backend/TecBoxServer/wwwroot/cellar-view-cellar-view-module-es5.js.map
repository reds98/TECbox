{"version":3,"sources":["webpack:///src/app/cellar-view/cellar-view-routing.module.ts","webpack:///src/app/cellar-view/cellar-view.component.ts","webpack:///src/app/cellar-view/cellar-view.component.html","webpack:///src/app/cellar-view/cellar-view.module.ts","webpack:///src/app/cellar-view/cellar-view.service.ts"],"names":["routes","path","component","CellarViewRoutingModule","forChild","imports","exports","CellarViewComponent","cellarService","columnsParent","consultationRequest","isNumber","userForm","TrackingID","objectValues","Object","values","objectKeys","keys","getPackage","subscribe","data","dataParent","console","log","value","get","isNaN","i","length","state","isConsulting","selector","templateUrl","styleUrls","CellarViewModule","declarations","CellarViewService","http","url","window","location","origin","providedIn"],"mappings":"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","file":"cellar-view-cellar-view-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CellarViewComponent } from './cellar-view.component';\n\nconst routes: Routes = [{ path: '', component: CellarViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CellarViewRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ReactiveFormsModule, FormGroup, FormControl, FormBuilder} from '@angular/forms';\nimport { CellarViewService } from 'src/app/cellar-view/cellar-view.service'\n\n\n@Component({\n  selector: 'app-cellar-view',\n  templateUrl: './cellar-view.component.html',\n  styleUrls: ['./cellar-view.component.css']\n})\nexport class CellarViewComponent implements OnInit {\n\n  constructor(private cellarService: CellarViewService) { }\n\n  // Attributes\n  columnsParent = [\"ID de rastreo\", \"Cliente\", \"Descripción\", \"Fecha de Entrega\", \"Estado\", \"Distrito\", \"Ruta\", \"Descuento\", \"Impuesto\"];\n  consultationRequest = false;\n  isNumber = true;\n  state;\n  userForm = new FormGroup({\n    TrackingID: new FormControl()\n  });\n\n  objectValues = Object.values;\n  objectKeys = Object.keys;\n\n  dataParent;\n\n  \n  // Assigns the data received to the dataParent attr\n  ngOnInit(): void {\n    this.cellarService.getPackage()\n    .subscribe(data => this.dataParent = data);\n    console.log(this.dataParent);\n  }\n\n  // Verifies that the client is consulting a package\n  isConsulting(){\n    this.consultationRequest = true;\n  }\n\n  // Checks if the number provided matches an existing package and returns it's current state\n  consultPackage(){\n    var value = this.userForm.get('TrackingID').value;\n    if(!isNaN(value)){\n      this.isNumber = true;\n\n      for(var i = 0; i < this.dataParent.length; i++){\n        if(value == this.objectValues(this.dataParent[i])[0]){\n          this.state = \"El paquete se encuentra: \" + this.objectValues(this.dataParent[i])[4];\n          break;\n        }\n        else{\n          this.state = \"No se ha encontrado un paquete con el número de traqueo cosultado.\";\n        }\n      }\n    }\n    else{\n      this.isNumber = false;\n    }\n  }\n}\n","<!-- Table component for celler -->\n<h1>\n  Tabla de Características de Paquetes\n</h1>\n<div>\n    <app-table [data] = \"dataParent\" [columns] = \"columnsParent\" #cellerTable></app-table>\n  </div>\n  <div>    \n    <button (click)=isConsulting() class=\"btn myBtn ml-2 pd-2\" type=\"button\">Consultar paquete</button>\t\n</div>\n\n\n<!-- Input for tracking a package's location -->\n<div *ngIf=\"consultationRequest\" class=\"container ml-2\">\n  <h2 style=\"font-size:20px\">Digite el número de traqueo del paquete</h2>\n\n  <form [formGroup]=\"userForm\">\n      <div class=\"form-group\">\n        <input formControlName=TrackingID placeholder=\"123456\" type=\"text\">\n        <button (click)=consultPackage() class=\"btn myBtn ml-1\">Buscar</button>\n        <p style=\"color:red\" *ngIf=\"!isNumber\">Debe ingresar un número</p>\n        <p style=\"color:#194056;\">{{this.state}}</p>\n      </div>\n\n     </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { CellarViewRoutingModule } from './cellar-view-routing.module';\nimport { CellarViewComponent } from './cellar-view.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    CellarViewComponent\n  ],\n  imports: [\n    CommonModule,\n    CellarViewRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class CellarViewModule { }\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CellarViewService {\n\n  //private url: string = \"http://localhost:53572/api/Packages\";\n  private url: string = window.location.origin+\"/api/Packages\";\n  constructor(private http: HttpClient) {\n  }\n  \n  // Gets package json from server\n  getPackage():Observable<any>{\n    return this.http.get(this.url);\n  }\n}\n"]}