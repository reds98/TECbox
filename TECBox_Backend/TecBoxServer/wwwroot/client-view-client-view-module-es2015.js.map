{"version":3,"sources":["./src/app/client-view/client-view-routing.module.ts","./src/app/client-view/client-view.component.ts","./src/app/client-view/client-view.component.html","./src/app/client-view/client-view.module.ts","./src/app/client-view/client-view.service.ts"],"names":[],"mappings":"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","file":"client-view-client-view-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClientViewComponent } from './client-view.component';\n\nconst routes: Routes = [{ path: '', component: ClientViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientViewRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ClientViewService } from 'src/app/client-view/client-view.service'\nimport { LoginViewService } from \"../login-view/login-view.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: 'app-client-view',\n  templateUrl: './client-view.component.html',\n  styleUrls: ['./client-view.component.css']\n})\nexport class ClientViewComponent implements OnInit {\n\n  constructor(private clientService: ClientViewService, private auth:LoginViewService, private router:Router) {\n\n  }\n  \n  // Attributes\n  columnsParent = [\"Cedula\", \"Nombre\", \"Correo Electrónico\", \"Casillero\", \"Teléfono\", \"Celular\", \"Dirección de Entrega\", \"Usuario\"];\n  \n  dataParent = [];\n\n  // Assigns the data received to the dataParent attr\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  salir(){\n    this.auth.logout();\n    window.location.reload();\n    this.router.navigateByUrl(\"/client-view\");\n  }\n\n  // Gets data from the server and sets localStorage items\n  getData(){\n    this.clientService.getClients()\n    .subscribe(data => {\n      let oldData = localStorage.getItem('tableData');\n      this.dataParent = data;\n      localStorage.setItem('tableData', JSON.stringify(data));\n      localStorage.setItem('ClientData', JSON.stringify(data));\n      if(oldData != localStorage.getItem('tableData')){\n        location.reload();\n      }\n    });\n    \n  }\n}\n","<!-- Table component for celler -->\n<h1>\n  Tabla de información de Clientes\n</h1>\n<button (click)=\"salir()\" type=\"button\" class=\"btn btn-danger\">Log Out</button>\n<!-- Loads the table for client with the values of the columns and data provided -->\n<div>\n    <div>\n      <app-table [data] = \"dataParent\" [columns] = \"columnsParent\" #cellerTable></app-table>\n    </div>\n  </div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientViewRoutingModule } from './client-view-routing.module';\nimport { ClientViewComponent } from './client-view.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [ClientViewComponent],\n  imports: [\n    CommonModule,\n    ClientViewRoutingModule,\n    SharedModule\n  ]\n})\nexport class ClientViewModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientViewService {\n\n  //private url: string = \"http://localhost:53572/api/clients\";\n  private url: string = window.location.origin;\n  constructor(private http: HttpClient) {\n  }\n\n  // Assigns a type to every observable that is received and returns this typified observable.\n  getClients(): Observable<any> {\n    let observable;\n      observable =  this.httpGet<JSON>();\n      return observable;\n  }\n\n  // Calls http.get() with the corresponding resource url.\n  private httpGet<T>(): Observable<T> {\n    return this.http.get<T>(this.url+\"/api/clients\");\n  }\n}\n"],"sourceRoot":"webpack:///"}