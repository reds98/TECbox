{"version":3,"sources":["webpack:///src/app/client-view/client-view-routing.module.ts","webpack:///src/app/client-view/client-view.component.ts","webpack:///src/app/client-view/client-view.component.html","webpack:///src/app/client-view/client-view.module.ts","webpack:///src/app/client-view/client-view.service.ts"],"names":["routes","path","component","ClientViewRoutingModule","forChild","imports","exports","ClientViewComponent","clientService","auth","router","columnsParent","dataParent","getData","logout","window","location","reload","navigateByUrl","getClients","subscribe","data","oldData","localStorage","getItem","setItem","JSON","stringify","salir","selector","templateUrl","styleUrls","ClientViewModule","declarations","ClientViewService","http","url","origin","observable","httpGet","get","providedIn"],"mappings":"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","file":"client-view-client-view-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClientViewComponent } from './client-view.component';\n\nconst routes: Routes = [{ path: '', component: ClientViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientViewRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ClientViewService } from 'src/app/client-view/client-view.service'\nimport { LoginViewService } from \"../login-view/login-view.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: 'app-client-view',\n  templateUrl: './client-view.component.html',\n  styleUrls: ['./client-view.component.css']\n})\nexport class ClientViewComponent implements OnInit {\n\n  constructor(private clientService: ClientViewService, private auth:LoginViewService, private router:Router) {\n\n  }\n  \n  // Attributes\n  columnsParent = [\"Cedula\", \"Nombre\", \"Correo Electrónico\", \"Casillero\", \"Teléfono\", \"Celular\", \"Dirección de Entrega\", \"Usuario\"];\n  \n  dataParent = [];\n\n  // Assigns the data received to the dataParent attr\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  salir(){\n    this.auth.logout();\n    window.location.reload();\n    this.router.navigateByUrl(\"/client-view\");\n  }\n\n  // Gets data from the server and sets localStorage items\n  getData(){\n    this.clientService.getClients()\n    .subscribe(data => {\n      let oldData = localStorage.getItem('tableData');\n      this.dataParent = data;\n      localStorage.setItem('tableData', JSON.stringify(data));\n      localStorage.setItem('ClientData', JSON.stringify(data));\n      if(oldData != localStorage.getItem('tableData')){\n        location.reload();\n      }\n    });\n    \n  }\n}\n","<!-- Table component for celler -->\n<h1>\n  Tabla de información de Clientes\n</h1>\n<button (click)=\"salir()\" type=\"button\" class=\"btn btn-danger\">Log Out</button>\n<!-- Loads the table for client with the values of the columns and data provided -->\n<div>\n    <div>\n      <app-table [data] = \"dataParent\" [columns] = \"columnsParent\" #cellerTable></app-table>\n    </div>\n  </div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientViewRoutingModule } from './client-view-routing.module';\nimport { ClientViewComponent } from './client-view.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [ClientViewComponent],\n  imports: [\n    CommonModule,\n    ClientViewRoutingModule,\n    SharedModule\n  ]\n})\nexport class ClientViewModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientViewService {\n\n  //private url: string = \"http://localhost:53572/api/clients\";\n  private url: string = window.location.origin;\n  constructor(private http: HttpClient) {\n  }\n\n  // Assigns a type to every observable that is received and returns this typified observable.\n  getClients(): Observable<any> {\n    let observable;\n      observable =  this.httpGet<JSON>();\n      return observable;\n  }\n\n  // Calls http.get() with the corresponding resource url.\n  private httpGet<T>(): Observable<T> {\n    return this.http.get<T>(this.url+\"/api/clients\");\n  }\n}\n"]}