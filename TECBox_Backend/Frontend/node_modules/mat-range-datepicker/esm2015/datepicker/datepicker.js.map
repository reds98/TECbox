{
  "version": 3,
  "file": "datepicker.js",
  "sources": [
    "ng://mat-range-datepicker/mat-range-datepicker/src/datepicker/datepicker.ts"
  ],
  "sourcesContent": [
    "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n    FlexibleConnectedPositionStrategy,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    PositionStrategy,\n    ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {filter, take} from 'rxjs/operators';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, mixinColor, ThemePalette} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Subscription} from 'rxjs';\nimport {SatCalendar} from './calendar';\nimport {RangeCalendar} from './range-calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {matRangeDatepickerInput, matRangeDatepickerRangeValue} from './datepicker-input';\nimport {DateAdapter} from '../datetime/date-adapter';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-range-datepicker-scroll-strategy', {\n      providedIn: 'root',\n      factory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(): () => ScrollStrategy {\n  const overlay = inject(Overlay);\n  return () => overlay.scrollStrategies.reposition();\n}\n\n// Boilerplate for applying mixins to matRangeDatepickerContent.\n/** @docs-private */\nexport class matRangeDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nexport const _matRangeDatepickerContentMixinBase = mixinColor(matRangeDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * SatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\nmoduleId: module.id,\n  selector: 'mat-range-datepicker-content',\n  template: `<range-calendar cdkTrapFocus\n              [id]=\"datepicker.id\"\n              [ngClass]=\"datepicker.panelClass\"\n              [startAt]=\"datepicker.startAt\"\n              [startView]=\"datepicker.startView\"\n              [minDate]=\"datepicker._minDate\"\n              [maxDate]=\"datepicker._maxDate\"\n              [dateFilter]=\"datepicker._dateFilter\"\n              [beginDate]=\"datepicker._beginDate\"\n              [endDate]=\"datepicker._endDate\"\n              [rangeMode]=\"datepicker.rangeMode\"\n              [selected]=\"datepicker._selected\"\n              (selectedChange)=\"datepicker._select($event)\"\n              (dateRangesChange)=\"datepicker._selectRange($event)\"\n              (yearSelected)=\"datepicker._selectYear($event)\"\n              (monthSelected)=\"datepicker._selectMonth($event)\"\n              (_userSelection)=\"datepicker.close($event)\">\n</range-calendar>\n`,\n  styles: [`.mat-datepicker-content{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);display:block;width:593px;height:493px}.end-date-sec,.from-date-sec{display:inline-block;width:50%;height:360px;box-sizing:border-box}.from-date-sec{border-right:.5px solid #e9e9e9}.end-date-sec{border-left:0 solid #e9e9e9}.quick-select-sec{border-top:1px solid #e9e9e9;border-bottom:1px solid #e9e9e9;height:50px;line-height:50px;padding:0 20px;font-size:14px;font-weight:200}.quick-select-sec .select-title{color:#9f9f9f}.quick-select-sec ul{display:inline-block;list-style-type:none;margin:0;color:#696969}.quick-select-sec ul li{display:inline-block;margin-left:10px}.quick-select-sec ul li .mat-button{font-size:13px;font-weight:400}.calendar-button-sec{padding:0 20px;text-align:right;line-height:80px}.calendar-button-sec button{margin-left:10px}.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12);display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-semi-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-semi-selected),:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-semi-selected){background-color:rgba(0,0,0,.04)}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-semi-selected,.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-semi-selected,:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-semi-selected{background-color:#3f51b5;color:#fff}.mat-calendar-body-begin-range:not(.mat-calendar-body-end-range){border-radius:100% 0 0 100%;background-color:#e8eaf6}.mat-calendar-body-end-range:not(.mat-calendar-body-begin-range){border-radius:0 100% 100% 0;background-color:#e8eaf6}.mat-calendar-body>tr .mat-calendar-cell-semi-selected~.mat-calendar-cell-semi-selected{border-radius:0}.mat-calendar-cell-semi-selected{background-color:#f0e7ff}.mat-button.active .mat-button-focus-overlay{opacity:1}`],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '\"enter\"',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n    '[class.mat-datepicker-content-above]': '_isAbove',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class matRangeDatepickerContent<D> extends _matRangeDatepickerContentMixinBase\n  implements AfterViewInit, CanColor, OnInit, OnDestroy {\n\n  /** Subscription to changes in the overlay's position. */\n  private _positionChange: Subscription|null;\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(RangeCalendar) _calendar: RangeCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: matRangeDatepicker<D>;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  constructor(\n    elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _ngZone: NgZone) {\n    super(elementRef);\n  }\n\n  ngOnInit() {\n    if (!this.datepicker._popupRef || this._positionChange) {\n      return;\n    }\n\n    const positionStrategy =\n      this.datepicker._popupRef.getConfig().positionStrategy! as FlexibleConnectedPositionStrategy;\n\n    this._positionChange = positionStrategy.positionChanges.subscribe(change => {\n      const isAbove = change.connectionPair.overlayY === 'bottom';\n\n      if (isAbove !== this._isAbove) {\n        this._ngZone.run(() => {\n          this._isAbove = isAbove;\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    // this._calendar.focusActiveCell();\n  }\n\n  ngOnDestroy() {\n    if (this._positionChange) {\n      this._positionChange.unsubscribe();\n      this._positionChange = null;\n    }\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-range-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class matRangeDatepicker<D> implements OnDestroy, CanColor {\n\n  /** Whenever datepicker is for selecting range of dates. */\n  @Input()\n  get rangeMode(): boolean {\n    return this._rangeMode;\n  }\n  set rangeMode(mode: boolean) {\n    this._rangeMode = mode;\n    if (this.rangeMode) {\n      this._validSelected = null;\n    } else {\n      this._beginDate = this._endDate = null;\n    }\n  }\n  private _rangeMode;\n\n  /** Start of dates interval. */\n  @Input()\n  get beginDate(): D | null { return this._beginDate; }\n  set beginDate(value: D | null) {\n    this._validSelected = null;\n    this._beginDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _beginDate: D | null;\n\n  _initBeginDate: D | null;\n  \n\n  /** End of dates interval. */\n  @Input()\n  get endDate(): D | null { return this._endDate; }\n  set endDate(value: D | null) {\n    this._validSelected = null;\n    this._endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _endDate: D | null;\n  _initEndDate: D | null;\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    if (this.rangeMode) {\n      return this._startAt || (this._datepickerInput && this._datepickerInput.value ?\n        (<matRangeDatepickerRangeValue<D>>this._datepickerInput.value).begin : null);\n    }\n    return this._startAt || (this._datepickerInput ? <D|null>this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-range-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null { return this._validSelected; }\n  set _selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  _popupRef: OverlayRef;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<matRangeDatepickerContent<D>> | null;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<matRangeDatepickerContent<D>>;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<matRangeDatepickerContent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: matRangeDatepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  /** Emits new selected date when selected date changes. */\n  readonly _selectedChanged = new Subject<matRangeDatepickerRangeValue<D>|D>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n\n  ngAfterContentInit() {\n    this._initBeginDate = this.beginDate;\n    this._initEndDate = this.endDate;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /** Selects the given date */\n  _select(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n\n\n  /** Selects the given date range */\n  _selectRange(dates: matRangeDatepickerRangeValue<D>): void {\n    if (!this._dateAdapter.sameDate(dates.begin, this.beginDate) ||\n      !this._dateAdapter.sameDate(dates.end, this.endDate)) {\n      this._selectedChanged.next(dates);\n    }\n    this._beginDate = dates.begin;\n    this._endDate = dates.end;\n  }\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: matRangeDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A matRangeDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange\n          .subscribe((value: matRangeDatepickerRangeValue<D> | D | null) => {\n          if (value === null) {\n            this.beginDate = this.endDate = this._selected = null;\n            return;\n          }\n          if (this.rangeMode) {\n            value = <matRangeDatepickerRangeValue<D>>value;\n            if (value.begin && value.end &&\n              this._dateAdapter.compareDate(value.begin, value.end) <= 0) {\n              this.beginDate = value.begin;\n              this.endDate = value.end;\n            } else {\n              this.beginDate = this.endDate = null;\n            }\n          } else {\n            this._selected = <D>value;\n          }\n        });\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    this._initBeginDate = this.beginDate;\n    this._initEndDate = this.endDate;\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an matRangeDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(options?: any): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n    //restore if not applied\n    if (!options || !options.apply) {\n      this.beginDate = this._initBeginDate;\n      this.endDate = this._initEndDate;\n      this._selectedChanged.next({\n        begin: this.beginDate,\n        end: this.endDate,\n      });\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    this._dialogRef = this._dialog.open<matRangeDatepickerContent<D>>(matRangeDatepickerContent, {\n      direction: this._getDirection(),\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._setColor();\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<matRangeDatepickerContent<D>>(matRangeDatepickerContent,\n                                                                          this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupRef.setDirection(this._getDirection());\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n      this._setColor();\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._getDirection(),\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n\n    merge(\n      this._popupRef.backdropClick(),\n      // this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(() => this.close());\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getPopupConnectionElementRef())\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withPush(false)\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the calendar overlay. */\n  private _setColor(): void {\n    const color = this.color;\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n\n  /** Returns the layout direction of the datepicker. */\n  private _getDirection() {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
