{
  "version": 3,
  "file": "datepicker-toggle.js",
  "sources": [
    "ng://mat-range-datepicker/mat-range-datepicker/src/datepicker/datepicker-toggle.ts"
  ],
  "sourcesContent": [
    "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion'\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n} from '@angular/core'\nimport {merge, of as observableOf, Subscription} from 'rxjs'\nimport {matRangeDatepicker} from './datepicker'\nimport {matRangeDatepickerIntl} from './datepicker-intl'\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n    selector: '[matDatepickerToggleIcon]',\n})\nexport class matRangeDatepickerToggleIcon {\n}\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'mat-range-datepicker-toggle',\n    template: `<button mat-icon-button type=\"button\" [attr.aria-label]=\"_intl.openCalendarLabel\"\n        [disabled]=\"disabled\" (click)=\"_open($event)\">\n\n    <svg\n            *ngIf=\"!_customIcon\"\n            class=\"mat-datepicker-toggle-default-icon\"\n            viewBox=\"0 0 24 24\"\n            width=\"24px\"\n            height=\"24px\"\n            fill=\"currentColor\"\n            focusable=\"false\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"/>\n    </svg>\n\n    <ng-content select=\"[matDatepickerToggleIcon]\"></ng-content>\n</button>\n`,\n    styles: [`.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}`],\n    host: {\n        'class': 'mat-datepicker-toggle',\n        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    },\n    exportAs: 'matDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class matRangeDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: matRangeDatepicker<D>\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(matRangeDatepickerToggleIcon) _customIcon: matRangeDatepickerToggleIcon\n\n    private _stateChanges = Subscription.EMPTY\n\n    private _disabled: boolean\n\n    constructor(public _intl: matRangeDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value)\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this._watchStateChanges()\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe()\n    }\n\n    ngAfterContentInit() {\n        this._watchStateChanges()\n    }\n\n    _open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open()\n            event.stopPropagation()\n        }\n    }\n\n    private _watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf()\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : observableOf()\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf()\n\n        this._stateChanges.unsubscribe()\n        this._stateChanges = merge(\n            this._intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled,\n        ).subscribe(() => this._changeDetectorRef.markForCheck())\n    }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
