{"version":3,"sources":["webpack:///src/app/admin-view/admin-view-routing.module.ts","webpack:///src/app/admin-view/admin-view.component.ts","webpack:///src/app/admin-view/admin-view.component.html","webpack:///src/app/admin-view/admin-view.module.ts","webpack:///src/app/admin-view/admin-view.service.ts"],"names":["routes","path","component","AdminViewRoutingModule","forChild","imports","exports","AdminViewComponent","adminService","data","selectedItem","title","objectValues","Object","values","objectKeys","keys","type","dataType","items","console","log","window","location","origin","getItems","subscribe","oldData","localStorage","getItem","setItem","JSON","stringify","reload","setData","roles","parse","offices","workers","sellers","products","entries","map","item","filter","getData","selector","templateUrl","styleUrls","AdminViewModule","declarations","AdminViewService","http","url","observable","httpGet","get","providedIn"],"mappings":"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","file":"admin-view-admin-view-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminViewComponent } from './admin-view.component';\n\nconst routes: Routes = [{ path: '', component: AdminViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminViewRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AdminViewService } from 'src/app/admin-view/admin-view.service'\n\n@Component({\n  selector: 'app-admin-view',\n  templateUrl: './admin-view.component.html',\n  styleUrls: ['./admin-view.component.css']\n})\nexport class AdminViewComponent implements OnInit {\n\n  items;\n  data = {\n    'roles': {\n    },\n    'offices': {\n    },\n    'workers': {\n    },\n    'sellers': {\n    },\n    'products': {\n    },\n    'routes': {\n    },\n    'app_movil_auth': {'authorized': 'false'},\n    'app_movil_packages': {\n    }\n  };\n\n  selectedItem = null;\n  title = 'Seleccione una vista';\n  \n  objectValues = Object.values;\n  objectKeys = Object.keys;\n\n\n  // Gets data from the server and sets localStorage items\n  getData(type, dataType){\n    this.selectedItem = null;\n    this.items = null;\n    this.title = 'Cargando';\n    console.log(type)\n    console.log( window.location.origin)\n    this.adminService.getItems(type)\n    \n    .subscribe(data => {\n      let oldData = localStorage.getItem(dataType);\n      localStorage.setItem(dataType, JSON.stringify(data));\n      if(oldData != localStorage.getItem(dataType)){\n        location.reload();\n      }\n    });\n    this.setData(type);\n  }\n\n  // Sets the information to each item\n  setData(type){\n    this.data.roles = JSON.parse(localStorage.getItem('RolesData'));\n    this.data.offices = JSON.parse(localStorage.getItem('OfficesData'));\n    this.data.workers = JSON.parse(localStorage.getItem('WorkersData'));\n    this.data.sellers = JSON.parse(localStorage.getItem('SellersData'));\n    this.data.products = JSON.parse(localStorage.getItem('ProductsData'));\n    this.data.routes = JSON.parse(localStorage.getItem('RoutesData'));\n    \n    this.items = this.data[type];\n  }\n\n  // Adds item\n  newItem(): void {\n    this.selectedItem = Object.entries(this.items[0]).map(item => {\n      return [item[0], ''];\n    });\n  }\n\n  // Deletes item\n  deleteItem(selectedItem): void {\n    this.items = this.items.filter(item => selectedItem !== item);\n    this.selectedItem = null;\n  }\n\n  // Selects item\n  selectItem(selectedItem) {\n    this.selectedItem = Object.entries(selectedItem);\n  }\n\n  // Deselects item\n  onConfirm() {\n    this.selectedItem = null;\n  }\n\n  constructor(private adminService: AdminViewService) {\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n","<button (click)=\"getData('roles','RolesData')\" type=\"button\" class=\"btn myBtn ml-1\">Gestión de roles</button>\n<button (click)=\"getData('offices','OfficesData')\" type=\"button\" class=\"btn myBtn ml-1\">Gestión de sucursales</button>\n<button (click)=\"getData('workers','WorkersData')\" type=\"button\" class=\"btn myBtn ml-1\">Gestión de trabajadores</button>\n<button (click)=\"getData('sellers','SellersData')\" type=\"button\" class=\"btn myBtn ml-1\">Gestión de vendedores</button>\n<button (click)=\"getData('products','ProductsData')\" type=\"button\" class=\"btn myBtn ml-1\">Gestión de productos</button>\n<button (click)=\"getData('routes','RoutesData')\" type=\"button\" class=\"btn myBtn ml-1\">Gestión de rutas</button>\n\n\n<div class=\"container\">\n  <ul class=\"list-group\"  *ngIf=\"items\">\n    <li\n      *ngFor=\"let item of items\"\n      class=\"list-group-item\">\n      <div>\n        <button (click)=\"selectItem(item)\" type=\"button\" class=\"btn editBtn ml-1\"><i class=\"fas fa-edit\"></i></button>\n        <button (click)=\"deleteItem(item)\" type=\"button\" class=\"btn deleteBtn ml-1\"><i class=\"fas fa-trash-alt\"></i></button>\n        <div *ngFor=\"let attribute of objectValues(item)\">{{attribute}}</div>\n      </div>\n    </li>\n    <li class=\"list-group-item\">\n      <div>\n        <button (click)=\"newItem()\" type=\"button\" class=\"btn myBtn\"><i class=\"fas fa-plus ml-1\"></i></button>\n      </div>\n    </li>\n  </ul>\n  <div *ngIf=\"selectedItem\" class=\"container\">\n    <h2>Detalles</h2>\n    <div class=\"form-group\" *ngFor=\"let attr of selectedItem\">\n      <label for=\"item1\">{{attr[0]}}</label>\n      <input type=\"text\" id=\"item1\" class=\"form-control\" value=\"{{attr[1]}}\">\n    </div>\n    <button type=\"button\" class=\"btn myBtn\" (click)=\"onConfirm()\"><i class=\"fas fa-check\"></i></button>\n    <button type=\"button\" class=\"btn deleteBtn\" (click)=\"onConfirm()\"><i class=\"fas fa-window-close\"></i></button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminViewRoutingModule } from './admin-view-routing.module';\nimport { AdminViewComponent } from './admin-view.component';\n\n\n@NgModule({\n  declarations: [AdminViewComponent],\n  imports: [\n    CommonModule,\n    AdminViewRoutingModule\n  ]\n})\nexport class AdminViewModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminViewService {\n\n  //private url: string = \"http://localhost:53572/api/\";\n  private url: string = window.location.origin+\"/api/\";\n  constructor(private http: HttpClient) {\n  }\n\n  // Assigns a type to every observable that is received and returns this typified observable.\n  getItems(type): Observable<any> {\n    let observable;\n      observable =  this.httpGet<JSON>(type);\n      return observable;\n  }\n\n  // Calls http.get() with the corresponding resource url.\n  private httpGet<T>(type): Observable<T> {\n    console.log(this.url + type)\n    return this.http.get<T>(this.url + type);\n  }\n}\n\n\n"]}