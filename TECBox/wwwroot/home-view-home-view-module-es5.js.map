{"version":3,"sources":["webpack:///src/app/home-view/home-view-routing.module.ts","webpack:///src/app/home-view/home-view.component.ts","webpack:///src/app/home-view/home-view.component.html","webpack:///src/app/home-view/home-view.module.ts","webpack:///src/app/home-view/home-view.service.ts"],"names":["routes","path","component","HomeViewRoutingModule","forChild","imports","exports","HomeViewComponent","homeService","isNumber","index","userForm","TrackingID","objectValues","Object","values","objectKeys","keys","getData","products","JSON","parse","localStorage","getItem","packageData","clientData","console","log","costDiscTaxArray","productArray","totalCost","currentUser","type","dataType","getItems","subscribe","data","oldData","setItem","stringify","location","reload","userEmail","bool","i","length","consultPackage","state","value","get","isNaN","list1","prod","push","costWDiscount","costWTax","array","calcPurchaseTotal","selector","templateUrl","styleUrls","HomeViewModule","declarations","HomeViewService","http","url","window","origin","observable","httpGet","providedIn"],"mappings":"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","file":"home-view-home-view-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeViewComponent } from './home-view.component';\n\nconst routes: Routes = [{ path: '', component: HomeViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeViewRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, FormGroup, FormControl, FormBuilder} from '@angular/forms';\nimport { HomeViewService } from 'src/app/home-view/home-view.service'\n\n@Component({\n  selector: 'app-home-view',\n  templateUrl: './home-view.component.html',\n  styleUrls: ['./home-view.component.css']\n})\nexport class HomeViewComponent implements OnInit {\n\n  constructor(private homeService: HomeViewService) { }\n\n  // Attributes\n  products: Object;\n  search;\n  costDiscTaxArray;\n  productArray;\n  isNumber = true;\n  state;\n  totalCost;\n  currentUser;\n  packageData;\n  clientData;\n  index = 0;\n  userForm = new FormGroup({\n    TrackingID: new FormControl()\n  });\n\n  \n  objectValues = Object.values;\n  objectKeys = Object.keys;\n\n\n\n  // Assigns the data received to the dataParent attr\n  ngOnInit(): void {\n    this.getData(\"Products\", 'ProductsData');\n    this.products = JSON.parse(localStorage.getItem('ProductsData'));\n    this.getData(\"Packages\", 'PackageData');\n    this.packageData = JSON.parse(localStorage.getItem('PackageData'));\n    this.getData(\"clients\", 'ClientData');\n    this.clientData = JSON.parse(localStorage.getItem('ClientData'));\n    console.log(this.objectValues(this.clientData[0])[2]);\n    this.costDiscTaxArray = [];\n    this.productArray = [];\n    this.totalCost = 0;\n    this.currentUser = (localStorage.getItem('email'));\n  }\n\n  // Gets data from server\n  getData(type, dataType){\n    this.homeService.getItems(type)\n    .subscribe(data => {\n      let oldData = localStorage.getItem(dataType);\n      localStorage.setItem(dataType, JSON.stringify(data));\n      if(oldData != localStorage.getItem(dataType)){\n        location.reload();\n      }\n    });\n  }\n\n  // VErifies that the consult for the packages state is being done by current user on his packages\n  checkCurrentUser(userEmail): boolean{\n    var bool = false;\n    console.log(\"UserEmail: \" + userEmail);\n    for(var i = 0; i < this.packageData.length; i++){\n      if(this.currentUser == this.objectValues(this.clientData[i])[2]){\n        console.log(\"Email: \" + this.objectValues(this.clientData[i])[2]);\n        this.index = i;\n        this.consultPackage();\n        break;\n      }\n      else{\n        bool = false;\n        this.state = \"Usted no puede acceder a esta información.\";\n      }\n    }\n    return bool;\n  }\n\n  // Checks if the number provided matches an existing package and returns it's current state\n  consultPackage(){\n    var value = this.userForm.get('TrackingID').value;\n    if(!isNaN(value)){\n      this.isNumber = true;\n      if(value == this.objectValues(this.clientData[this.index])[8]){\n        this.state = \"El paquete se encuentra: \" + this.objectValues(this.packageData[this.index])[4];\n      }\n      else{\n        this.state = \"No se ha encontrado un paquete en su cuenta con el número de traqueo cosultado.\";\n      }\n    }\n    else{\n      this.isNumber = false;\n    }\n  }\n\n\n  // Receives a list of the products cost, discount and tax, respectively as list1 and the product's name as prod\n  addToCart(list1, prod){\n    this.costDiscTaxArray.push(list1);\n    this.productArray.push(prod);\n    console.log(this.costDiscTaxArray);\n  }\n\n  // Calculates the total cost of the purchase\n  calcPurchaseTotal(){\n    var costWDiscount = 0;\n    var costWTax = 0;\n    var array = this.costDiscTaxArray;\n    let i: number = 0;\n    this.totalCost = 0;\n    while(i < array.length){\n      if(array[i][1] != 0 && array[i][2] !=0){\n        costWDiscount += (array[i][0]*(1 - array[i][1]));\n        costWTax += (costWDiscount + costWDiscount*array[i][2]);\n        this.totalCost += costWTax;\n        costWDiscount = 0; \n        costWTax = 0;\n        i++;\n      }\n    }\n  }\n}\n","<!-- Shows all the products and provides a filter for them -->\n\n<div class=\"input-icons myContainer\">\n  <!-- Buy Button -->\n  <button align=\"right\" class=\"btn buyBtn\" type=\"button\" (click) = \"calcPurchaseTotal()\"\n  data-toggle=\"modal\" data-target=\"#cartModal\">Comprar</button>\n\n  <!-- Search bar -->\n  <ul>\n  <i class=\"fa fa-search icon\" align=\"right\"></i>\n  <input style=\"font-size:20px\" type=\"text\" name=\"search\" [(ngModel)]=\"search\" placeholder=\"Buscar...\"class=\"form-control myBar\" autocomplete=\"off\">\n  </ul>\n\n  <!-- List of products -->\n  <ul *ngIf=\"products\">\n  <li *ngFor=\"let product of products | filter: search\">\n    <div>\n      <p class=\"name\">{{product.name}}</p>\n      <p class=\"description\">Descripción: {{product.description}}</p>\n      <img class=\"size\" [src]=\"product.image\"/>\n      <p class=\"description\">Precio: {{ product.purchase_price }}$ + {{ product.tax*100}}% i.v.</p>\n      <p class=\"description\"> Descuento: {{product.discount*100}}%</p>\n      <button class=\"btn myBtn ml-2\" type=\"button\" data-toggle=\"modal\" data-target=\"#confirmModal\"\n      (click) = \"addToCart([product.purchase_price, product.discount, product.tax], product.name)\">\n      <i class=\"fa fa-shopping-cart fa-2x myIcon\"></i></button>\n    </div>\n  </li>\n  </ul>\n</div>\n\n<!-- Confirmation modal for added to cart -->\n<div class=\"modal fade\" id=\"confirmModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog myModal\" role=\"document\">\n        <div class=\"modal-content\">\n        <div class=\"modal-body\">\n          <h4 class=\"modal-title\" id=\"modal-basic-title\">¡Agregado al carrito!</h4>\n        </div>\n        <div class=\"modal-body\">\n          <label >¡Continúe comprando con nosotros!</label>\n        </div>\n        <div class=\"modal-footer mb-3\">\n          <button aria-hidden=\"true\" type=\"button\" class=\"btn buyBtn2\" data-dismiss=\"modal\">Cerrar</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <!-- Cart list modal, this displays the products added to cart -->\n<div class=\"modal fade\" id=\"cartModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog myModal\" role=\"document\">\n      <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Lista de compras</h4>\n      </div>\n      <div class=\"modal-body\"  *ngFor=\"let prod of productArray\">\n        <label>{{prod}}</label>\n      </div>\n      <div class=\"modal-footer mb-3\">\n        <label class=\"myLabel\">\n          Total: $ {{this.totalCost}}\n        </label>\n        <button aria-hidden=\"true\" type=\"button\" class=\"btn buyBtn2\" data-dismiss=\"modal\">Cerrar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- Input for tracking a package's location -->\n<div class=\"container ml-2\">\n  <h2 style=\"font-size:20px\">Digite el número de traqueo del paquete</h2>\n\n  <form [formGroup]=\"userForm\">\n      <div class=\"form-group\">\n        <ul>\n          <li>\n            <input formControlName=TrackingID placeholder=\"123456\" type=\"text\">\n            <button (click)=consultPackage() class=\"btn buyBtn2 ml-1\">Buscar</button>\n            <p style=\"color:red\" *ngIf=\"!isNumber\">Debe ingresar un número</p>\n            <p style=\"color:#194056;\">{{this.state}}</p>\n          </li>\n        </ul>\n      </div>\n\n     </form>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeViewRoutingModule } from './home-view-routing.module';\nimport { HomeViewComponent } from './home-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// search module\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\n@NgModule({\n  declarations: [HomeViewComponent],\n  imports: [\n    CommonModule,\n    HomeViewRoutingModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule,\n    FormsModule\n  ]\n})\nexport class HomeViewModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeViewService {\n\n  //private url: string = \"http://localhost:53572/api/\";\n  private url: string = window.location.origin+\"/api/\";\n  constructor(private http: HttpClient) {\n  }\n\n// Assigns a type to every observable that is received and returns this typified observable.\ngetItems(type): Observable<any> {\n  let observable;\n    observable =  this.httpGet<JSON>(type);\n    return observable;\n}\n\n// Calls http.get() with the corresponding resource url.\nprivate httpGet<T>(type): Observable<T> {\n  return this.http.get<T>(this.url + type);\n}\n\n}"]}